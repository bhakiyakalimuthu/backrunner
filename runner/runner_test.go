package runner

import (
	"context"
	"encoding/hex"
	"fmt"
	"testing"

	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/rlp"
	"go.uber.org/zap"
)

func TestRunner_decodeTx(t *testing.T) {
	type fields struct {
		logger    *zap.Logger
		clients   *Clients
		contracts *Contracts
	}
	type args struct {
		tx *types.Transaction
	}
	tests := []struct {
		name    string
		tx      *types.Transaction
		wantErr bool
	}{
		//{
		//	name: "decode tx",
		//	//tx:   GetTx("f902148204bc8510c388d00083048f549468b3465833fb72a70ecdf485e0e4c7bd8665fc45876a94d74f430000b901a45ae401dc00000000000000000000000000000000000000000000000000000000643fe1eb00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e4472b43f3000000000000000000000000000000000000000000000000006a94d74f43000000000000000000000000000000000000000000000000141a56608f39502b5e88000000000000000000000000000000000000000000000000000000000000008000000000000000000000000047597e3f4e32157fd75b13ea6c017226d3f4c7aa0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000074f908835b8fcc74ce720fa5e6857a41a373fbea0000000000000000000000000000000000000000000000000000000000a0913a6d0fa7fa17c270ce0408bfad058f0bf66fd9aae90c9262b7ab579c1604c8a05a8113086438766a4f33005cb529215e794ca24806b6b0de812bc495e8791167"),
		//	tx: GetTx("f90152068511cad0681e8302dcb59468b3465833fb72a70ecdf485e0e4c7bd8665fc4588011c37937e080000b8e404e45aaf000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000006982508145454ce325ddbe47a25d4ec3d23119330000000000000000000000000000000000000000000000000000000000002710000000000000000000000000737c88ef0262ccb56572d137ea90d364776fb899000000000000000000000000000000000000000000000000011c37937e0800000000000000000000000000000000000000000000017585bcb5799010d90e1a3f000000000000000000000000000000000000000000000000000000000000000001a057d06049da987f5882307dffe7f9d51470e3f322de6805d12f77846f2472e79ba02982b7860a60be5211524e3b26d9027b7892fb66553856c7138b35644c3c3084"),
		//},
		{
			name: "decode tx1",
			//tx:   GetTx("f902148204bc8510c388d00083048f549468b3465833fb72a70ecdf485e0e4c7bd8665fc45876a94d74f430000b901a45ae401dc00000000000000000000000000000000000000000000000000000000643fe1eb00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e4472b43f3000000000000000000000000000000000000000000000000006a94d74f43000000000000000000000000000000000000000000000000141a56608f39502b5e88000000000000000000000000000000000000000000000000000000000000008000000000000000000000000047597e3f4e32157fd75b13ea6c017226d3f4c7aa0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000074f908835b8fcc74ce720fa5e6857a41a373fbea0000000000000000000000000000000000000000000000000000000000a0913a6d0fa7fa17c270ce0408bfad058f0bf66fd9aae90c9262b7ab579c1604c8a05a8113086438766a4f33005cb529215e794ca24806b6b0de812bc495e8791167"),
			tx: GetTx("f9021582015c851390c7d79083023b819468b3465833fb72a70ecdf485e0e4c7bd8665fc4588016345785d8a0000b901a45ae401dc000000000000000000000000000000000000000000000000000000006440023700000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e4472b43f3000000000000000000000000000000000000000000000000016345785d8a000000000000000000000000000000000000000000017fa237f51163e0c5c18be1e400000000000000000000000000000000000000000000000000000000000000800000000000000000000000005738fd46abe3d0646fdf9bfbb7e2580db01dfcf30000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000030e4da00bcbfc721d61f4e60d5be3feb07f4a5860000000000000000000000000000000000000000000000000000000001a09aaf70b64b3613563e9094b6ca94f56cc69d96120bed27b60428b2c97cc25af9a05dae200c03819ffbec89e8611cf7423d6f1fa764ca522f494c254c42cc27c811"),
		},
		//{
		//	name: "decode tx2",
		//	//tx:   GetTx("f902148204bc8510c388d00083048f549468b3465833fb72a70ecdf485e0e4c7bd8665fc45876a94d74f430000b901a45ae401dc00000000000000000000000000000000000000000000000000000000643fe1eb00000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e4472b43f3000000000000000000000000000000000000000000000000006a94d74f43000000000000000000000000000000000000000000000000141a56608f39502b5e88000000000000000000000000000000000000000000000000000000000000008000000000000000000000000047597e3f4e32157fd75b13ea6c017226d3f4c7aa0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000074f908835b8fcc74ce720fa5e6857a41a373fbea0000000000000000000000000000000000000000000000000000000000a0913a6d0fa7fa17c270ce0408bfad058f0bf66fd9aae90c9262b7ab579c1604c8a05a8113086438766a4f33005cb529215e794ca24806b6b0de812bc495e8791167"),
		//	tx: GetTx("f902ab468503d03c74158302f1879468b3465833fb72a70ecdf485e0e4c7bd8665fc4500b902445ae401dc000000000000000000000000000000000000000000000000000000006348adff000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000e45023b4df000000000000000000000000626e8036deb333b408be468f951bdb42433cbf18000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000000000000000000000000000000027100000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000008c550a6ca0c00000000000000000000000000000000000000000000000003798737e57650b0e25000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004449404b7c000000000000000000000000000000000000000000000000008c550a6ca0c00000000000000000000000000038c350599a55343df6b38c3667ebaa04f7af2bfc0000000000000000000000000000000000000000000000000000000001a05fb66d2f563ce61d4a1a156ea88f5b58b0a68bcb47ab9962292aa05f5e99fba7a0618c1629c61a092a1f4d99cdddccd6484a81f8124ca994f72e8e36d5943f9153"),
		//},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			r := &Runner{logger: zap.NewNop()}
			if err := r.decodeTx(context.TODO(), tt.tx); (err != nil) != tt.wantErr {
				t.Errorf("decodeTx() error = %v, wantErr %v", err, tt.wantErr)
			}
		})
	}
}

func GetTx(rawTxHex string) *types.Transaction {
	//hash := common.HexToHash(rawTxHex)

	rawTxBytes, err := hex.DecodeString(rawTxHex)
	if err != nil {
		fmt.Errorf("unabel to decode string")
		return nil
	}

	tx := new(types.Transaction)
	if err := rlp.DecodeBytes(rawTxBytes, &tx); err != nil {
		fmt.Errorf("unabel to unmarshal binaray")
		return nil
	}
	//if err := tx.UnmarshalBinary(rawTxBytes); err != nil {
	//	fmt.Errorf("unabel to unmarshal binaray")
	//	return nil
	//}

	return tx

}
